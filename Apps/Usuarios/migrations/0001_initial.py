# Generated by Django 3.0.3 on 2020-04-22 23:37

import Apps.Usuarios.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('duracion', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('fecha', models.DateField()),
                ('foto', models.ImageField(blank=True, null=True, upload_to=Apps.Usuarios.models.image_Path)),
            ],
            options={
                'verbose_name': 'Album',
                'verbose_name_plural': 'Albums',
            },
        ),
        migrations.CreateModel(
            name='Cancion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('duracion', models.DecimalField(decimal_places=2, max_digits=4)),
                ('autor', models.CharField(max_length=100)),
                ('calificacion', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Usuarios.Album')),
            ],
            options={
                'verbose_name': 'Cancion',
                'verbose_name_plural': 'Canciones',
            },
        ),
        migrations.CreateModel(
            name='Disquera',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('direccion', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Disquera',
                'verbose_name_plural': 'Disqueras',
            },
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('descripcion', models.CharField(max_length=300)),
            ],
            options={
                'verbose_name': 'Genero',
                'verbose_name_plural': 'Generos',
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('Is_public', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name': 'Playlist',
                'verbose_name_plural': 'Playlist',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_premium', models.BooleanField(default=False)),
                ('fechaNacimiento', models.DateField()),
                ('pais', models.CharField(choices=[('MX', 'Mexico'), ('EU', 'Estados Unidos')], max_length=2)),
                ('foto', models.ImageField(upload_to=Apps.Usuarios.models.image_Path_User)),
                ('is_artist', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioCanciones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cancion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Usuarios.Cancion')),
                ('Usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UsuarioCanciones',
                'verbose_name_plural': 'Usuarios/Canciones',
            },
        ),
        migrations.CreateModel(
            name='PlaylistCanciones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cancion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Usuarios.Cancion')),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Usuarios.Playlist')),
            ],
            options={
                'verbose_name': 'PlaylistCanciones',
                'verbose_name_plural': 'Playlist/Canciones',
            },
        ),
        migrations.AddField(
            model_name='playlist',
            name='Usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='album',
            name='Disquera',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Usuarios.Disquera'),
        ),
        migrations.AddField(
            model_name='album',
            name='Genero',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Usuarios.Genero'),
        ),
    ]
